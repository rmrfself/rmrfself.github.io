<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/tag/database/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2019-03-26T15:12:54+08:00</updated>
  <id>http://localhost:4000/tag/database/feed.xml</id>

  
  
  

  
    <title type="html">张庆华的个人日志 | </title>
  

  
    <subtitle>Learn, Innovate, Share - Business Based Vision.</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">PostgreSQL MySQL 数据类型映射</title>
      <link href="http://localhost:4000/archi-postgresql" rel="alternate" type="text/html" title="PostgreSQL MySQL 数据类型映射" />
      <published>2017-08-15T18:31:11+08:00</published>
      <updated>2017-08-15T18:31:11+08:00</updated>
      <id>http://localhost:4000/archi-postgresql</id>
      <content type="html" xml:base="http://localhost:4000/archi-postgresql">&lt;p&gt;参考
&lt;a href=&quot;https://dev.mysql.com/doc/workbench/en/wb-migration-database-postgresql-typemapping.html&quot;&gt;PostgreSQL Type Mapping&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;postgresql类型-转换为-mysql类型&quot;&gt;PostgreSQL类型 转换为 MySQL类型&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;PostgreSQL Type&lt;/th&gt;
      &lt;th&gt;MySQL Type&lt;/th&gt;
      &lt;th&gt;Comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;INT&lt;/td&gt;
      &lt;td&gt;INT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMALLINT&lt;/td&gt;
      &lt;td&gt;SMALLINT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BIGINT&lt;/td&gt;
      &lt;td&gt;BIGINT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SERIAL&lt;/td&gt;
      &lt;td&gt;INT&lt;/td&gt;
      &lt;td&gt;Sets AUTO_INCREMENT in its table definition.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMALLSERIAL&lt;/td&gt;
      &lt;td&gt;SMALLINT&lt;/td&gt;
      &lt;td&gt;Sets AUTO_INCREMENT in its table definition.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BIGSERIAL&lt;/td&gt;
      &lt;td&gt;BIGINT&lt;/td&gt;
      &lt;td&gt;Sets AUTO_INCREMENT in its table definition.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BIT&lt;/td&gt;
      &lt;td&gt;BIT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
      &lt;td&gt;TINYINT(1)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;REAL&lt;/td&gt;
      &lt;td&gt;FLOAT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DOUBLE PRECISION&lt;/td&gt;
      &lt;td&gt;DOUBLE&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NUMERIC&lt;/td&gt;
      &lt;td&gt;DECIMAL&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DECIMAL&lt;/td&gt;
      &lt;td&gt;DECIMAL&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MONEY&lt;/td&gt;
      &lt;td&gt;DECIMAL(19,2)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CHAR&lt;/td&gt;
      &lt;td&gt;CHAR/LONGTEXT&lt;/td&gt;
      &lt;td&gt;Depending on its length. MySQL Server 5.5 and above can have CHAR columns with a length up to 255 characters. Anything larger is migrated as LONGTEXT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NATIONAL CHARACTER&lt;/td&gt;
      &lt;td&gt;CHAR/LONGTEXT&lt;/td&gt;
      &lt;td&gt;Depending on its length. MySQL Server 5.5 and above can have VARCHAR columns with a length up to 65535 characters. Anything larger is migrated to one of the TEXT blob types. In MySQL, character set of strings depend on the column character set instead of the datatype.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;VARCHAR&lt;/td&gt;
      &lt;td&gt;VARCHAR/MEDIUMTEXT/LONGTEXT&lt;/td&gt;
      &lt;td&gt;Depending on its length. MySQL Server 5.5 and above can have VARCHAR columns with a length up to 65535 characters. Anything larger is migrated to one of the TEXT blob types.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NATIONAL CHARACTER VARYING&lt;/td&gt;
      &lt;td&gt;VARCHAR/MEDIUMTEXT/LONGTEXT&lt;/td&gt;
      &lt;td&gt;Depending on its length. MySQL Server 5.5 and above can have VARCHAR columns with a length up to 65535 characters. Anything larger is migrated to one of the TEXT blob types. In MySQL, character set of strings depend on the column character set instead of the datatype.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DATE&lt;/td&gt;
      &lt;td&gt;DATE&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TIME&lt;/td&gt;
      &lt;td&gt;TIME&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TIMESTAMP&lt;/td&gt;
      &lt;td&gt;DATETIME&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INTERVAL&lt;/td&gt;
      &lt;td&gt;TIME&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BYTEA&lt;/td&gt;
      &lt;td&gt;LONGBLOB&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TEXT&lt;/td&gt;
      &lt;td&gt;LONGTEXT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CIDR&lt;/td&gt;
      &lt;td&gt;VARCHAR(43)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INET&lt;/td&gt;
      &lt;td&gt;VARCHAR(43)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MACADDR&lt;/td&gt;
      &lt;td&gt;VARCHAR(17)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UUID&lt;/td&gt;
      &lt;td&gt;VARCHAR(36)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XML&lt;/td&gt;
      &lt;td&gt;LONGTEXT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JSON&lt;/td&gt;
      &lt;td&gt;LONGTEXT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TSVECTOR&lt;/td&gt;
      &lt;td&gt;LONGTEXT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TSQUERY&lt;/td&gt;
      &lt;td&gt;LONGTEXT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ARRAY&lt;/td&gt;
      &lt;td&gt;LONGTEXT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POINT&lt;/td&gt;
      &lt;td&gt;POINT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LINE&lt;/td&gt;
      &lt;td&gt;LINESTRING&lt;/td&gt;
      &lt;td&gt;Although LINE length is infinite, and LINESTRING is finite in MySQL, it is approximated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LSEG&lt;/td&gt;
      &lt;td&gt;LINESTRING&lt;/td&gt;
      &lt;td&gt;A LSEG is like a LINESTRING with only two points&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BOX&lt;/td&gt;
      &lt;td&gt;POLYGON&lt;/td&gt;
      &lt;td&gt;A BOX is a POLYGON with five points and right angles&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PATH&lt;/td&gt;
      &lt;td&gt;LINESTRING&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POLYGON&lt;/td&gt;
      &lt;td&gt;POLYGON&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CIRCLE&lt;/td&gt;
      &lt;td&gt;POLYGON&lt;/td&gt;
      &lt;td&gt;A POLYGON is used to approximate a CIRCLE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TXID_SNAPSHOT&lt;/td&gt;
      &lt;td&gt;VARCHAR&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;类型&quot;&gt;类型&lt;/h3&gt;
&lt;p&gt;1. 数据类型&lt;/p&gt;

&lt;p&gt;1.1 PostgreSQL&lt;/p&gt;

&lt;p&gt;高精度numeric, 浮点, 自增序列，货币，字节流，时间，日期，时间戳，布尔，枚举，平面几何，立体几何，多维几何，地球，PostGIS，网络，比特流，全文检索，UUID，XML，JSON，数组，复合类型，域类型，范围，树类型，化学类型，基因序列，FDW, 大对象, 图像&lt;/p&gt;

&lt;p&gt;1.2 MySQL&lt;/p&gt;

&lt;p&gt;数字，时间，字符串，简单的GIS，JSON&lt;/p&gt;

&lt;p&gt;2. 支持索引的数据类型&lt;/p&gt;

&lt;p&gt;2.1 PostgreSQL&lt;/p&gt;

&lt;p&gt;高精度numeric, 浮点, 自增序列，货币，字节流，时间，日期，时间戳，布尔，枚举，平面几何，立体几何，多维几何，地球，PostGIS，网络，比特流，全文检索，UUID，XML，JSON，数组，复合类型，域类型，范围，树类型，化学，基因序列&lt;/p&gt;

&lt;p&gt;2.2 MySQL&lt;/p&gt;

&lt;p&gt;数字，字符串，比特流，时间，全文检索，GIS&lt;/p&gt;

&lt;h3 id=&quot;索引支持&quot;&gt;索引支持&lt;/h3&gt;
&lt;p&gt;1. 索引方法&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持 btree, hash, gist, sp-gist, gin, brin , bloom , rum 索引&lt;/p&gt;

&lt;p&gt;MySQL 支持 btree, gis类型索引&lt;/p&gt;

&lt;p&gt;2. 规则表达式、前后模糊查询，支持索引检索&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;3. 数组支持索引&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;4. 全文检索支持索引&lt;/p&gt;

&lt;p&gt;5. 索引扩展功能&lt;/p&gt;

&lt;p&gt;5.1 PostgreSQL 支持 表达式索引，部分索引，联合索引&lt;/p&gt;

&lt;p&gt;5.2 PostgreSQL 支持图像相似度、文本相似度搜索&lt;/p&gt;

&lt;p&gt;5.3 自定义索引访问方法(bloom, rum, ……)&lt;/p&gt;

&lt;p&gt;PostgreSQL支持&lt;/p&gt;

&lt;h3 id=&quot;多引擎和外部源支持&quot;&gt;多引擎和外部源支持&lt;/h3&gt;
&lt;p&gt;1. 多引擎支持&lt;/p&gt;

&lt;p&gt;1.1 PostgreSQL&lt;/p&gt;

&lt;p&gt;内置heap, 通过插件实现内存表, 列存储, 压缩存储, 流式存储, 非关系存储等。&lt;/p&gt;

&lt;p&gt;1.2 MySQL&lt;/p&gt;

&lt;p&gt;MyISAM, innodb, …&lt;/p&gt;

&lt;p&gt;2. 外部表&lt;/p&gt;

&lt;p&gt;PostgreSQL支持任意外部数据源, (例如jdbc, file, odbc, oracle, mysql, db2, redis, mongo, ES, hadoop……)&lt;/p&gt;

&lt;p&gt;https://wiki.postgresql.org/wiki/Fdw&lt;/p&gt;

&lt;p&gt;3. dblink&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;4. 内存表&lt;/p&gt;

&lt;p&gt;PostgreSQL 通过外部表支持，或者通过插件支持&lt;/p&gt;

&lt;p&gt;5. ES(弹性搜索引擎) 引擎&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;h3 id=&quot;安全&quot;&gt;安全&lt;/h3&gt;
&lt;p&gt;1. 数据加密&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持加密数据类型，可选GPG加密算法&lt;/p&gt;

&lt;p&gt;2. 认证方法&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持 密码、LDAP、AD、GSSAPI、SSPI、Ident、Peer、RADIUS、PAM、签名认证&lt;/p&gt;

&lt;p&gt;3. 数据传输加密&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;4. 行安全策略&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;5. 数据库内部支持libselinux接口, (美国国家安全局制定的安全加强标准)&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;h3 id=&quot;优化器&quot;&gt;优化器&lt;/h3&gt;
&lt;p&gt;http://www.postgresql.org/docs/9.5/static/runtime-config-query.html&lt;/p&gt;

&lt;p&gt;1. GPU 并行计算支持&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;2. 遗传优化器算法&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持CBO、CRO、遗传算法&lt;/p&gt;

&lt;p&gt;3. HINT PLAN&lt;/p&gt;

&lt;p&gt;4. CPU 并行计算&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持 (线性性能提升)&lt;/p&gt;

&lt;p&gt;5. 自定义成本因子&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;h3 id=&quot;编程扩展&quot;&gt;编程扩展&lt;/h3&gt;
&lt;p&gt;1. 是否支持采样查询&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;2. 是否支持扩展采样算法&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;3. 自定义数据类型&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;4. 自定义索引方法&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;5. 字符集自动转换, C扩展接口&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;6. 自定义聚合&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;7. 自定义窗口&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;h3 id=&quot;扩展能力&quot;&gt;扩展能力&lt;/h3&gt;
&lt;p&gt;1. 类型扩展，操作符扩展，函数扩展，索引方法扩展，索引扩展，&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;2. C触发器函数， C事件触发器函数&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;3. 函数语言扩展&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持扩展函数支持接口, erlang, ….&lt;/p&gt;

&lt;p&gt;4. 机器学习库&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;

&lt;p&gt;5. 流式计算&lt;/p&gt;

&lt;p&gt;PostgreSQL 支持&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html">参考 PostgreSQL Type Mapping</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Postgres的流复制最佳实践</title>
      <link href="http://localhost:4000/archi-postgresql" rel="alternate" type="text/html" title="Postgres的流复制最佳实践" />
      <published>2017-08-11T19:30:10+08:00</published>
      <updated>2017-08-11T19:30:10+08:00</updated>
      <id>http://localhost:4000/archi-postgresql</id>
      <content type="html" xml:base="http://localhost:4000/archi-postgresql">&lt;p&gt;一主两从，介绍PG 9.5的主从最佳实践。&lt;/p&gt;

&lt;h3 id=&quot;初始化主库&quot;&gt;初始化主库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;initdb -D /exp2/pgdata -E UTF8 --locale=C -U postgres 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置postgresqlconf&quot;&gt;配置postgresql.conf&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen_addresses = '*'			
port = 5433				
max_connections = 700			
unix_socket_directories = '/exp2/pgdata/data_salon/socket'	
shared_buffers = 1024MB			
work_mem = 10MB				
dynamic_shared_memory_type = posix	
wal_level = hot_standby			
wal_buffers = 1024kB			
checkpoint_segments = 64		
max_wal_senders = 3		
wal_keep_segments = 32		
random_page_cost = 2.0			
effective_cache_size = 3072MB
logging_collector = on			
log_directory = 'pg_log'		
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	
log_rotation_age = 1d			
log_rotation_size = 20MB		
log_min_duration_statement = 5000	
log_line_prefix = '[%d %p %t %c %l]'	
log_timezone = 'Japan'
autovacuum_vacuum_cost_limit = 200	
datestyle = 'iso, ymd'
timezone = 'Japan'
client_encoding = UTF8						
default_text_search_config = 'pg_catalog.simple'
deadlock_timeout = 100s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置pg_hbaconf&quot;&gt;配置pg_hba.conf&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# &quot;local&quot; is for Unix domain socket connections only  
local   all             all                                     trust  
# IPv4 local connections:  
host    all             all             127.0.0.1/32            trust  
# IPv6 local connections:  
host    all             all             ::1/128                 trust  
# Allow replication connections from localhost, by a user with the  
# replication privilege.  
local   replication     all                                     trust  
host    replication     all             127.0.0.1/32            trust  
host    replication     all             ::1/128                 trust  
host replication all 0.0.0.0/0 md5  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置recoverydone&quot;&gt;配置recovery.done&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi recovery.done  
  
recovery_target_timeline = 'latest'  
standby_mode = on  
primary_conninfo = 'host=127.0.0.1 port=5433 user=app_user password=app123'  
# recovery_min_apply_delay = 0   #延迟多少分钟应用，用户可以配置延迟的备库，例如给一点误操作的缓冲时间。在备库不会这么早被应用。  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;启动主库&quot;&gt;启动主库&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_ctl start -D /exp2/pgdata&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建流复制角色&quot;&gt;创建流复制角色&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql 
Type &quot;help&quot; for help.  
  
postgres=# set synchronous_commit =off;  
SET  
postgres=# create role rep login replication encrypted password 'pwd';  
CREATE ROLE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;创建备库&quot;&gt;创建备库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pg_basebackup -D /exp2/pgdata -F p -X stream -h 127.0.0.1 -p 5433 -U rep  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;启动备库&quot;&gt;启动备库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv recovery.done recovery.conf  
pg_ctl start -D /exp2/pgdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;压测&quot;&gt;压测&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pgbench -i -s 100 -h 127.0.0.1 -p 5433 -U postgres  
  
pgbench -n -r -P 1 -h 127.0.0.1 -p 5433 -U postgres -c 32 -j 32 -T 120  

transaction type: &amp;lt;builtin: TPC-B (sort of)&amp;gt;
scaling factor: 100
query mode: simple
number of clients: 32
number of threads: 32
duration: 120 s
number of transactions actually processed: 1326066
latency average = 2.896 ms
latency stddev = 2.030 ms
tps = 11050.199659 (including connections establishing)
tps = 11051.140876 (excluding connections establishing)
script statistics:
 - statement latencies in milliseconds:
         0.002  \set aid random(1, 100000 * :scale)
         0.001  \set bid random(1, 1 * :scale)
         0.001  \set tid random(1, 10 * :scale)
         0.000  \set delta random(-5000, 5000)
         0.043  BEGIN;
         0.154  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;
         0.112  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;
         0.159  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;
         0.423  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;
         0.092  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);
         1.910  END;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html">一主两从，介绍PG 9.5的主从最佳实践。</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Postgres的流复制最佳实践</title>
      <link href="http://localhost:4000/archi-postgresql-2" rel="alternate" type="text/html" title="Postgres的流复制最佳实践" />
      <published>2017-08-11T19:30:10+08:00</published>
      <updated>2017-08-11T19:30:10+08:00</updated>
      <id>http://localhost:4000/archi-postgresql%202</id>
      <content type="html" xml:base="http://localhost:4000/archi-postgresql-2">&lt;p&gt;一主两从，介绍PG 9.5的主从最佳实践。&lt;/p&gt;

&lt;h3 id=&quot;初始化主库&quot;&gt;初始化主库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;initdb -D /exp2/pgdata -E UTF8 --locale=C -U postgres 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置postgresqlconf&quot;&gt;配置postgresql.conf&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen_addresses = '*'			
port = 5433				
max_connections = 700			
unix_socket_directories = '/exp2/pgdata/data_salon/socket'	
shared_buffers = 1024MB			
work_mem = 10MB				
dynamic_shared_memory_type = posix	
wal_level = hot_standby			
wal_buffers = 1024kB			
checkpoint_segments = 64		
max_wal_senders = 3		
wal_keep_segments = 32		
random_page_cost = 2.0			
effective_cache_size = 3072MB
logging_collector = on			
log_directory = 'pg_log'		
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	
log_rotation_age = 1d			
log_rotation_size = 20MB		
log_min_duration_statement = 5000	
log_line_prefix = '[%d %p %t %c %l]'	
log_timezone = 'Japan'
autovacuum_vacuum_cost_limit = 200	
datestyle = 'iso, ymd'
timezone = 'Japan'
client_encoding = UTF8						
default_text_search_config = 'pg_catalog.simple'
deadlock_timeout = 100s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置pg_hbaconf&quot;&gt;配置pg_hba.conf&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# &quot;local&quot; is for Unix domain socket connections only  
local   all             all                                     trust  
# IPv4 local connections:  
host    all             all             127.0.0.1/32            trust  
# IPv6 local connections:  
host    all             all             ::1/128                 trust  
# Allow replication connections from localhost, by a user with the  
# replication privilege.  
local   replication     all                                     trust  
host    replication     all             127.0.0.1/32            trust  
host    replication     all             ::1/128                 trust  
host replication all 0.0.0.0/0 md5  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置recoverydone&quot;&gt;配置recovery.done&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi recovery.done  
  
recovery_target_timeline = 'latest'  
standby_mode = on  
primary_conninfo = 'host=127.0.0.1 port=5433 user=app_user password=app123'  
# recovery_min_apply_delay = 0   #延迟多少分钟应用，用户可以配置延迟的备库，例如给一点误操作的缓冲时间。在备库不会这么早被应用。  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;启动主库&quot;&gt;启动主库&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_ctl start -D /exp2/pgdata&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建流复制角色&quot;&gt;创建流复制角色&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql 
Type &quot;help&quot; for help.  
  
postgres=# set synchronous_commit =off;  
SET  
postgres=# create role rep login replication encrypted password 'pwd';  
CREATE ROLE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;创建备库&quot;&gt;创建备库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pg_basebackup -D /exp2/pgdata -F p -X stream -h 127.0.0.1 -p 5433 -U rep  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;启动备库&quot;&gt;启动备库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv recovery.done recovery.conf  
pg_ctl start -D /exp2/pgdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;压测&quot;&gt;压测&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pgbench -i -s 100 -h 127.0.0.1 -p 5433 -U postgres  
  
pgbench -n -r -P 1 -h 127.0.0.1 -p 5433 -U postgres -c 32 -j 32 -T 120  

transaction type: &amp;lt;builtin: TPC-B (sort of)&amp;gt;
scaling factor: 100
query mode: simple
number of clients: 32
number of threads: 32
duration: 120 s
number of transactions actually processed: 1326066
latency average = 2.896 ms
latency stddev = 2.030 ms
tps = 11050.199659 (including connections establishing)
tps = 11051.140876 (excluding connections establishing)
script statistics:
 - statement latencies in milliseconds:
         0.002  \set aid random(1, 100000 * :scale)
         0.001  \set bid random(1, 1 * :scale)
         0.001  \set tid random(1, 10 * :scale)
         0.000  \set delta random(-5000, 5000)
         0.043  BEGIN;
         0.154  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;
         0.112  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;
         0.159  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;
         0.423  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;
         0.092  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);
         1.910  END;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html">一主两从，介绍PG 9.5的主从最佳实践。</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Postgres的流复制</title>
      <link href="http://localhost:4000/archi-postgresql" rel="alternate" type="text/html" title="Postgres的流复制" />
      <published>2015-02-10T11:17:10+08:00</published>
      <updated>2015-02-10T11:17:10+08:00</updated>
      <id>http://localhost:4000/archi-postgresql</id>
      <content type="html" xml:base="http://localhost:4000/archi-postgresql">&lt;h3 id=&quot;流复制起源&quot;&gt;流复制起源&lt;/h3&gt;

&lt;p&gt;PostgreSQL 自从2010年推出的9.0版本开始，支持流式物理复制，用户可以通过流式复制，构建只读备库(主备物理复制，块级别一致)。流式物理复制可以做到极低的延迟（通常在1毫秒以内）。&lt;/p&gt;

&lt;h3 id=&quot;同步流复制&quot;&gt;同步流复制&lt;/h3&gt;

&lt;p&gt;2011年推出的9.1版本，支持同步复制，当时只支持一个同步流复制备节点（例如配置了3个备，只有一个是同步模式的，其他都是异步模式）。&lt;/p&gt;

&lt;p&gt;在同步复制模式下，当用户提交事务时，需要等待这笔事务的WAL日志复制到同步流复制备节点，才会返回提交成功的ACK给客户端。&lt;/p&gt;

&lt;p&gt;同步模式下，可以确保数据的0丢失。（只要客户端收到了事务提交成功的ACK，这笔事务的WAL就有两份。）&lt;/p&gt;

&lt;h3 id=&quot;级联流复制&quot;&gt;级联流复制&lt;/h3&gt;

&lt;p&gt;2012年推出的9.2版本，支持级联流复制。意思是备库还可以再连备库。&lt;/p&gt;

&lt;p&gt;级联复制特别适合跨机房的使用，例如主库在A机房，备库在B机房，但是B机房需要建立多个备库时，那么B机房只需要建立一个直连主库的备库，其他的备库可以通过B机房的这个备库级联产生。从而减少网络开销。&lt;/p&gt;

&lt;h3 id=&quot;流式虚拟备库&quot;&gt;流式虚拟备库&lt;/h3&gt;

&lt;p&gt;2012年推出的9.2版本，除了支持级联复制，还支持虚拟备库，什么是虚拟备库呢？就是只有WAL，没有数据文件的备库。&lt;/p&gt;

&lt;p&gt;通过虚拟备库，可以流式的接收WAL，进行实时的流式WAL归档。提高备份或归档的实时性。&lt;/p&gt;

&lt;h3 id=&quot;逻辑复制的基础&quot;&gt;逻辑复制的基础&lt;/h3&gt;

&lt;p&gt;2014年推出的9.4版本，在WAL中增加了逻辑复制需要的基础信息，通过插件，可以实现逻辑复制。&lt;/p&gt;

&lt;p&gt;逻辑复制可以做到对主库的部分复制，例如表级复制，而不是整个集群的块级一致复制。&lt;/p&gt;

&lt;p&gt;逻辑复制的备库不仅仅是只读的，也可以执行写操作。&lt;/p&gt;

&lt;h3 id=&quot;增加几种同步级别&quot;&gt;增加几种同步级别&lt;/h3&gt;

&lt;p&gt;2016年推出的9.6版本，PG的流式复制，通过复制WAL达到同步的目的，因此同步级别也和WAL有关。通过synchronous_commit参数，可以配置事务的同步级别。&lt;/p&gt;

&lt;p&gt;1、on, 表示本地WAL fsync，同步standby WAL fsync。即两份持久化的WAL。&lt;/p&gt;

&lt;p&gt;2、remote_apply, 表示本地WAL fsync，同步standby WAL 已恢复。这个带来的RT最高。&lt;/p&gt;

&lt;p&gt;3、remote_write, 表示本地WAL fsync，同步standby WAL 异步write完成。一份持久化，备库的WAL可能还在OS CACHE中。&lt;/p&gt;

&lt;p&gt;4、local, 表示本地WAL fsync。&lt;/p&gt;

&lt;p&gt;5、off, 表示本地WAL写到wal buffer中即返回客户端事务提交成功的ACK，为异步提交（数据库CRASH可能导致事务丢失，但不会导致数据库不一致）。&lt;/p&gt;

&lt;p&gt;RT影响，从低到高如下：&lt;/p&gt;

&lt;p&gt;off, local, remote_write, on, remote_apply。&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html">流复制起源</summary>
      

      
      
    </entry>
  
</feed>
